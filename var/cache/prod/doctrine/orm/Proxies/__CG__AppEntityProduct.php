<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \App\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'illustration', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'subtitle', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'Author', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'Publisher', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'Stock', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'nbe_pages', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'year_of_publication', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'subcategory'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'illustration', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'subtitle', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'Author', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'Publisher', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'Stock', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'nbe_pages', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'year_of_publication', '' . "\0" . 'App\\Entity\\Product' . "\0" . 'subcategory'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug(string $slug): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getIllustration(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIllustration', []);

        return parent::getIllustration();
    }

    /**
     * {@inheritDoc}
     */
    public function setIllustration(string $illustration): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIllustration', [$illustration]);

        return parent::setIllustration($illustration);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtitle', []);

        return parent::getSubtitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtitle(string $subtitle): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtitle', [$subtitle]);

        return parent::setSubtitle($subtitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice(float $price): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor(string $Author): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$Author]);

        return parent::setAuthor($Author);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublisher(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublisher', []);

        return parent::getPublisher();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublisher(string $Publisher): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublisher', [$Publisher]);

        return parent::setPublisher($Publisher);
    }

    /**
     * {@inheritDoc}
     */
    public function getStock(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStock', []);

        return parent::getStock();
    }

    /**
     * {@inheritDoc}
     */
    public function setStock(int $Stock): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStock', [$Stock]);

        return parent::setStock($Stock);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbePages(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbePages', []);

        return parent::getNbePages();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbePages(int $nbe_pages): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbePages', [$nbe_pages]);

        return parent::setNbePages($nbe_pages);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearOfPublication(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearOfPublication', []);

        return parent::getYearOfPublication();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearOfPublication(int $year_of_publication): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearOfPublication', [$year_of_publication]);

        return parent::setYearOfPublication($year_of_publication);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubcategory(): ?\App\Entity\Subcategory
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubcategory', []);

        return parent::getSubcategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubcategory(?\App\Entity\Subcategory $subcategory): \App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubcategory', [$subcategory]);

        return parent::setSubcategory($subcategory);
    }

}
